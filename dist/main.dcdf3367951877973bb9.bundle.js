(()=>{"use strict";function t(t,e,n,o){var i,s=arguments.length,r=s<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,o);else for(var c=t.length-1;c>=0;c--)(i=t[c])&&(r=(s<3?i(r):s>3?i(e,n,r):i(e,n))||r);return s>3&&r&&Object.defineProperty(e,n,r),r}function e(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}function n(t,e){return(n,o,i)=>{n.constructor.listeners||(n.constructor.listeners=[]),n.constructor.listeners.push({selector:e,eventName:t,handler:n[o]})}}function o({selector:t,template:e,style:n,styleUrl:o,useShadow:i=!0}){return o=>{(t=>{if(!~t.indexOf("-"))throw new Error("You need at least 1 dash in the custom element name!")})(t),(t=>{if(!t)throw new Error("You need to pass a template for the element!")})(e);const s=document.createElement("template");n&&(e=`<style>${n}</style> ${e}`),s.innerHTML=e;const r=o.prototype.connectedCallback||function(){};o.prototype.connectedCallback=function(){const t=document.importNode(s.content,!0);i?this.attachShadow({mode:"open"}).appendChild(t):this.appendChild(t),r.call(this),function(t){const e=t.constructor.listeners,n=t.shadowRoot||t;if(e)for(const o of e)(o.selector?n.querySelector(o.selector):t).addEventListener(o.eventName,(e=>{o.handler.call(t,e)}))}(this)},customElements.define(t,o)}}function i(t,e){return function(n,o){t||(t=String(o)),Object.defineProperty(n,o,{get:function(){const n=e||this;return{emit(e){n.dispatchEvent(new CustomEvent(t,e))}}}})}}Object.create,Object.create;let s=class extends HTMLElement{constructor(){super()}onToggleButton(t){this.shadowRoot.lastChild.disabled=!1}handleButtonClick(t){this.onButtonClick.emit()}};t([n("toggleButton"),e("design:type",Function),e("design:paramtypes",[CustomEvent]),e("design:returntype",void 0)],s.prototype,"onToggleButton",null),t([n("click"),e("design:type",Function),e("design:paramtypes",[CustomEvent]),e("design:returntype",void 0)],s.prototype,"handleButtonClick",null),t([i("minify",document.getElementById("output")),e("design:type",Object)],s.prototype,"onButtonClick",void 0),s=t([o({selector:"action-button",template:"<button disabled>Minify</button>",style:":host button {\n\t\tcolor: #fff;\n\t    background: blue;\n\t\tcursor: pointer;\n\t}\n\t:host button:disabled {\n\t\topacity: 0.6;\n\t}"}),e("design:paramtypes",[])],s);let r=class extends HTMLElement{constructor(){super(),this.firstTimeInit=!0}connectedCallback(){"output"===this.shadowRoot.host.id&&document.addEventListener("minify",this.handleMinifyEvent)}handleInput({target:t}){t.value.length&&this.firstTimeInit&&(this.onInput.emit(),this.firstTimeInit=!1)}handleMinifyEvent(t){const e=document.getElementById("input").shadowRoot.lastChild;this.shadowRoot.lastChild.value=e.value}};t([i("toggleButton",document.querySelector("action-button")),e("design:type",Object)],r.prototype,"onInput",void 0),t([n("input","textarea"),e("design:type",Function),e("design:paramtypes",[CustomEvent]),e("design:returntype",void 0)],r.prototype,"handleInput",null),t([n("minify"),e("design:type",Function),e("design:paramtypes",[CustomEvent]),e("design:returntype",void 0)],r.prototype,"handleMinifyEvent",null),r=t([o({selector:"code-area",template:"<textarea />",style:":host textarea {\n        background-color: #ccc;\n    }"}),e("design:paramtypes",[])],r),window.addEventListener("DOMContentLoaded",(()=>{}))})();