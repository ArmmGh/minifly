(()=>{"use strict";function t(t,e,n,o){var i,s=arguments.length,a=s<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,o);else for(var c=t.length-1;c>=0;c--)(i=t[c])&&(a=(s<3?i(a):s>3?i(e,n,a):i(e,n))||a);return s>3&&a&&Object.defineProperty(e,n,a),a}function e({selector:t,template:e,style:n,styleURL:o,useShadow:i=!0}){return o=>{(t=>{if(!~t.indexOf("-"))throw new Error("You need at least 1 dash in the custom element name!")})(t),(t=>{if(!t)throw new Error("You need to pass a template for the element!")})(e);const s=document.createElement("template");n&&(e=`<style>${n}</style> ${e}`),s.innerHTML=e;const a=o.prototype.connectedCallback||function(){};o.prototype.connectedCallback=function(){const t=document.importNode(s.content,!0);i?this.attachShadow({mode:"open"}).appendChild(t):this.appendChild(t),a.call(this)},customElements.define(t,o)}}Object.create,Object.create;let n=class extends HTMLElement{constructor(){super()}connectedCallback(){this.shadowRoot.addEventListener("click",(t=>{document.dispatchEvent(new CustomEvent("minify"))})),document.addEventListener("toggleButton",(t=>{this.shadowRoot.lastChild.disabled=!1}))}};n=t([e({selector:"action-button",template:"<button disabled>Minify</button>",style:":host button {\n\t\tcolor: #fff;\n\t    background: blue;\n\t\tcursor: pointer;\n\t}\n\t:host button:disabled {\n\t\topacity: 0.6;\n\t}\n\t"})],n);let o=class extends HTMLElement{constructor(){super(),this.firstTimeInit=!0,this.handleMinifyEvent=()=>{const t=document.getElementById("input").shadowRoot.lastChild;this.shadowRoot.lastChild.value=t.value},this.handleInputChange=({target:t})=>{(null==t?void 0:t.value.trim().length)&&this.firstTimeInit&&(this.onInput.emit(),this.firstTimeInit=!1)}}connectedCallback(){this.shadowRoot.addEventListener("input",this.handleInputChange),"output"===this.shadowRoot.host.id&&document.addEventListener("minify",this.handleMinifyEvent)}};var i;t([(i="toggleButton",function(t,e){i||(i=String(e)),Object.defineProperty(t,e,{get:function(){const t=this;return{emit(e){console.log("AA",i,t),t.dispatchEvent(new CustomEvent(i,e))}}}})})],o.prototype,"onInput",void 0),o=t([e({selector:"code-area",template:"<textarea />",style:":host textarea {\n        background-color: #ccc;\n    }"})],o),window.addEventListener("DOMContentLoaded",(()=>{}))})();