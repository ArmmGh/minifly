(()=>{"use strict";function t(t,e,n,o){var i,s=arguments.length,c=s<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(t,e,n,o);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(c=(s<3?i(c):s>3?i(e,n,c):i(e,n))||c);return s>3&&c&&Object.defineProperty(e,n,c),c}function e(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}function n({selector:t,template:e,style:n,styleUrl:o,useShadow:i=!0}){return s=>{(t=>{if(!~t.indexOf("-"))throw new Error("You need at least 1 dash in the custom element name!")})(t),(t=>{if(!t)throw new Error("You need to pass a template for the element!")})(e);const c=document.createElement("template");n?e=`<style>${n}</style> ${e}`:o&&console.log(o),c.innerHTML=e;const r=s.prototype.connectedCallback||function(){};s.prototype.connectedCallback=function(){const t=document.importNode(c.content,!0);i?this.attachShadow({mode:"open"}).appendChild(t):this.appendChild(t),r.call(this)},customElements.define(t,s)}}Object.create,Object.create;let o=class extends HTMLElement{constructor(){super()}connectedCallback(){this.shadowRoot.addEventListener("click",(t=>{document.dispatchEvent(new CustomEvent("minify"))})),document.addEventListener("toggleButton",(t=>{this.shadowRoot.lastChild.disabled=!1}))}};function i(t,e){return(n,o,i)=>{n.constructor.listeners||(n.constructor.listeners=[]),n.constructor.listeners.push({selector:e,eventName:t,handler:n[o]})}}o=t([n({selector:"action-button",template:"<button disabled>Minify</button>",style:":host button {\n\t\tcolor: #fff;\n\t    background: blue;\n\t\tcursor: pointer;\n\t}\n\t:host button:disabled {\n\t\topacity: 0.6;\n\t}"}),e("design:paramtypes",[])],o);let s=class extends HTMLElement{constructor(){super(),this.firstTimeInit=!0}handleInput({target:t}){(null==t?void 0:t.value.trim().length)&&this.firstTimeInit&&(this.onInput.emit(),this.firstTimeInit=!1)}handleMinifyEvent(){const t=document.getElementById("input").shadowRoot.lastChild;this.shadowRoot.lastChild.value=t.value}connectedCallback(){"output"===this.shadowRoot.host.id&&document.addEventListener("minify",this.handleMinifyEvent)}};var c;t([(c="toggleButton",function(t,e){c||(c=String(e)),Object.defineProperty(t,e,{get:function(){const t=this;return{emit(e){t.dispatchEvent(new CustomEvent(c,e))}}}})}),e("design:type",Object)],s.prototype,"onInput",void 0),t([i("input"),e("design:type",Function),e("design:paramtypes",[Event]),e("design:returntype",void 0)],s.prototype,"handleInput",null),t([i("minify"),e("design:type",Function),e("design:paramtypes",[]),e("design:returntype",void 0)],s.prototype,"handleMinifyEvent",null),s=t([n({selector:"code-area",template:"<textarea />",style:":host textarea {\n        background-color: #ccc;\n    }"}),e("design:paramtypes",[])],s),window.addEventListener("DOMContentLoaded",(()=>{}))})();